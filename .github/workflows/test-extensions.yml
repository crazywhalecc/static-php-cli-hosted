name: Build Test for Extensions

on:
  workflow_dispatch:
    inputs:
      added-extensions:
        description: extensions to compile (comma separated)
        required: true
        default: bcmath,bz2,calendar,ctype,curl,dom,exif,fileinfo,filter,ftp,gd,gmp,iconv,xml,mbstring,mbregex,mysqlnd,openssl,pcntl,pdo,pdo_mysql,pdo_sqlite,phar,posix,redis,session,simplexml,soap,sockets,sqlite3,tokenizer,xmlwriter,xmlreader,zlib,zip
        type: string
      debug:
        type: boolean
        default: true
      repo:
        type: string
        default: crazywhalecc/static-php-cli
      branch:
        type: string
        default: main

jobs:
  download:
    name: "Download files (except PHP)"
    runs-on: ubuntu-latest
    outputs:
      input_hash: ${{ steps.set_input_hash.outputs.input_hash }}
    steps:
      - name: "Checkout repo"
        uses: "actions/checkout@v4"
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.branch }}

      - name: "Calculate hash of input extensions"
        id: set_input_hash
        run: |
          echo "INPUT_HASH=$(echo '${{ inputs.added-extensions }}:${{ inputs.repo }}:${{ inputs.branch }}' | md5sum | awk '{print $1}')" >> $GITHUB_ENV
          echo "::set-output name=input_hash::${{ env.INPUT_HASH }}"
      
      - name: "Check if --debug is enabled"
        if: inputs.debug == true
        run: echo "SPC_BUILD_DEBUG=--debug" >> $GITHUB_ENV

      - name: "Install PHP for official runners"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: none
          tools: composer:v2
          php-version: 8.2
          ini-values: memory_limit=-1

      - name: "Cache composer dependencies"
        id: cache-composer-deps
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-dependencies

      - name: "Cache download sources"
        id: cache-download-sources
        uses: actions/cache@v3
        with:
          path: downloads
          key: source-downloads-${{ env.INPUT_HASH }}

      - name: "Install composer dependencies"
        if: steps.cache-composer-deps.outputs.cache-hit != 'true'
        run: "composer update --no-dev --classmap-authoritative"

      - name: "Download sources"
        if: steps.cache-download-sources.outputs.cache-hit != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.S_GITHUB_TOKEN }}
        run: ./bin/spc download --for-extensions=${{ inputs.added-extensions }} ${{ env.SPC_BUILD_DEBUG }}

      - name: "Remove PHP"
        if: steps.cache-download-sources.outputs.cache-hit != 'true'
        run: rm downloads/php-*.tar.gz

  build-release-artifacts:
    name: "Build ${{ matrix.php-version }} on ${{ matrix.operating-system }}"
    runs-on: ${{ matrix.operating-system }}
    needs: download
    strategy:
      matrix:
        php-version:
          - "8.2"
          - "8.1"
          - "8.0"
          - "8.3"
        operating-system:
          - "ubuntu-latest"
          - "macos-latest"
          - "debian-arm64-self-hosted"
          - "macos-arm64-self-hosted"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.branch }}

      - name: "Cache composer dependencies"
        id: cache-composer-deps
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-dependencies

      - name: "Using input hash ${{ needs.download.outputs.input_hash }}"
        run: echo "${{ needs.download.outputs.input_hash }}"

      - name: "Cache download sources"
        id: cache-download-sources
        uses: actions/cache@v3
        with:
          path: downloads
          # fail-on-cache-miss: true
          key: source-downloads-${{ needs.download.outputs.input_hash }}

      - name: OS type
        id: os-type
        run: |
          OS=""
          if [ "${{ matrix.operating-system }}" = "ubuntu-latest" ]; then
              OS="linux-x86_64"
          elif [ "${{ matrix.operating-system }}" = "macos-latest" ]; then
              OS="macos-x86_64"
          elif [ "${{ matrix.operating-system }}" = "debian-arm64-self-hosted" ]; then
              OS="linux-aarch64"
          elif [ "${{ matrix.operating-system }}" = "macos-arm64-self-hosted" ]; then
              OS="macos-aarch64"
          fi
          echo "OS=$OS" >> $GITHUB_ENV

      # With or without debug
      - if: inputs.debug == true
        run: echo "SPC_BUILD_DEBUG=--debug" >> $GITHUB_ENV

      - if: ${{ matrix.operating-system == 'macos-latest' || matrix.operating-system == 'ubuntu-latest' }}
        name: "Install PHP for official runners"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: none
          tools: composer:v2
          php-version: 8.2
          ini-values: memory_limit=-1

      - name: "Install composer dependencies"
        if: steps.cache-composer-deps.outputs.cache-hit != 'true'
        run: "composer update --no-dev --classmap-authoritative"

      - name: "Build test for extensions"
        run: |
          SPC_USE_SUDO=yes ./bin/spc doctor --auto-fix
          ./bin/spc download --for-extensions=${{ inputs.added-extensions }} --with-php=${{ matrix.php-version }}
          ./bin/spc build --build-cli --build-micro --build-fpm ${{ inputs.added-extensions }} ${{ env.SPC_BUILD_DEBUG }}
